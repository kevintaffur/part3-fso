{"version":3,"sources":["components/Button.js","components/Person.js","components/Persons.js","components/PersonForm.js","components/Filter.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Button","_ref","handleClick","text","react_default","a","createElement","onClick","Person","person","remove","name","number","components_Button","id","Persons","persons","search","Fragment","filter","toLowerCase","includes","map","components_Person","key","PersonForm","add","handleNameChange","handleNumberChange","onSubmit","value","onChange","type","Filter","handleChange","baseUrl","services_persons","axios","get","then","response","data","newPerson","post","delete","concat","newData","put","Notification","message","className","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","_useState7","_useState8","setSearch","_useState9","_useState10","setMessage","_useState11","_useState12","notificationType","setNotificationType","useEffect","personService","initialPersons","components_Notification","components_Filter","event","target","components_PersonForm","preventDefault","samePersonNewNumber","find","numberAlreadyExist","window","confirm","updatedPerson","objectSpread","returnedPerson","catch","err","console","log","finally","setTimeout","alert","error","components_Persons","personToDelete","_","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.9eb61c07.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Button = ({ handleClick, text }) => (\r\n  <button onClick={handleClick}>\r\n    {text}\r\n  </button>\r\n)\r\n\r\nexport default Button;","import React from 'react';\r\nimport Button from \"./Button\";\r\n\r\nconst Person = ({ person, remove }) => (\r\n  <div>{person.name} {person.number} <Button handleClick={() => remove(person.id)} text=\"delete\" /></div>\r\n)\r\n\r\nexport default Person;","import React from 'react';\r\nimport Person from \"./Person\";\r\n\r\nconst Persons = ({ persons, search, remove }) => (\r\n  <>\r\n    {persons.filter(person => person.name.toLowerCase().includes(search.toLowerCase()))\r\n      .map(person => <Person key={person.name} person={person} remove={remove} />)}\r\n  </>\r\n)\r\n\r\nexport default Persons;","import React from 'react';\r\n\r\nconst PersonForm = ({ add, name, number, handleNameChange, handleNumberChange }) => (\r\n  <form onSubmit={add}>\r\n    <div>\r\n      name: <input\r\n        value={name}\r\n        onChange={handleNameChange}\r\n      />\r\n    </div>\r\n    <div>\r\n      number: <input\r\n        value={number}\r\n        onChange={handleNumberChange}\r\n      />\r\n    </div>\r\n    <div>\r\n      <button type=\"submit\">add</button>\r\n    </div>\r\n  </form>\r\n)\r\n\r\nexport default PersonForm;","import React from 'react';\r\n\r\nconst Filter = ({ search, handleChange }) => (\r\n  <div>\r\n    filter shown with <input\r\n      value={search}\r\n      onChange={handleChange}\r\n    />\r\n  </div >\r\n)\r\n\r\nexport default Filter;","import axios from \"axios\";\r\n\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nconst create = (newPerson) => {\r\n  const request = axios.post(baseUrl, newPerson);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nconst remove = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`);\r\n}\r\n\r\nconst update = (id, newData) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newData);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nexport default { getAll, create, remove, update }","import React from 'react';\r\n\r\nconst Notification = ({ message, type }) => {\r\n  if (message === null && type === null) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={type}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification;","import React, { useState, useEffect } from \"react\";\nimport Persons from \"./components/Persons\";\nimport PersonForm from \"./components/PersonForm\";\nimport Filter from \"./components/Filter\";\nimport personService from \"./services/persons\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [search, setSearch] = useState('');\n  const [message, setMessage] = useState(null);\n  const [notificationType, setNotificationType] = useState(null);\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons);\n      });\n  }, []);\n\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    const samePersonNewNumber = persons.find(person => person.name === newName && person.number !== newNumber);\n    const numberAlreadyExist = persons.find(person => person.number === newNumber);\n\n    if (samePersonNewNumber) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const updatedPerson = {\n          ...samePersonNewNumber,\n          number: newNumber\n        }\n        personService\n          .update(updatedPerson.id, updatedPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== updatedPerson.id ? person : returnedPerson));\n            setNewName('');\n            setNewNumber('');\n            setMessage(`${updatedPerson.name} updated`);\n            setNotificationType('success');\n          })\n          .catch(err => {\n            console.log(err);\n            setMessage(`Information of ${updatedPerson.name} has already been removed from server`);\n            setNotificationType('error');\n          })\n          .finally(() => {\n            setTimeout(() => {\n              setMessage(null);\n              setNotificationType(null);\n            }, 5000);\n          });\n      }\n    } else if (numberAlreadyExist) {\n      alert(`${newNumber} is already added to phonebook`);\n    } else {\n      const newPerson = {\n        name: newName,\n        number: newNumber\n      };\n\n      personService\n        .create(newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson));\n          setNewName('');\n          setNewNumber('');\n          setMessage(`${newPerson.name} added`);\n          setNotificationType('success');\n        })\n        .catch(err => {\n          setMessage(err.response.data.error);\n          setNotificationType('error');\n        })\n        .finally(() => {\n          setTimeout(() => {\n            setMessage(null);\n            setNotificationType(null);\n          }, 5000);\n        });\n    }\n  }\n\n  const removePerson = (id) => {\n    const personToDelete = persons.filter(person => person.id === id)[0];\n    if (window.confirm(`Delete ${personToDelete.name}?`)) {\n      personService\n        .remove(id)\n        .then(_ => {\n          setPersons(persons.filter(person => person.id !== personToDelete.id));\n          setMessage(`${personToDelete.name} removed`);\n          setNotificationType('success');\n        })\n        .catch(_ => {\n          setMessage(`Information of ${personToDelete.name} has already been removed from server`);\n          setNotificationType('error');\n        })\n        .finally(() => {\n          setTimeout(() => {\n            setMessage(null);\n            setNotificationType(null);\n          }, 5000);\n        });\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  }\n\n  const handleSearchChange = (event) => {\n    setSearch(event.target.value);\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} type={notificationType} />\n      <Filter search={search} handleChange={handleSearchChange} />\n      <h3>Add a new</h3>\n      <PersonForm\n        add={addPerson}\n        name={newName}\n        number={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n      />\n      <h3>Numbers</h3>\n      <Persons\n        persons={persons}\n        search={search}\n        remove={removePerson}\n      />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport './index.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}